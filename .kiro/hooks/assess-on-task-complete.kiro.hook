{
  "enabled": false,
  "name": "Assess on Task Complete",
  "description": "Multi-reviewer validation when tasks are completed (Security, Performance, Architecture, Code Quality)",
  "version": "1",
  "when": {
    "type": "manual"
  },
  "then": {
    "type": "askAgent",
    "prompt": "The user has declared a task complete. Perform a comprehensive multi-review using all four expert reviewers:\n\n## Multi-Review Process\n\n### 1. Security Review\nReference `.kiro/steering/reviewers/security-reviewer.md` and validate:\n- Authentication/authorization\n- CSRF/XSS/SQL Injection protection\n- Rate limiting\n- Sensitive information exposure\n\n### 2. Performance Review\nReference `.kiro/steering/reviewers/performance-reviewer.md` and validate:\n- N+1 queries\n- Index usage\n- Memory leaks\n- Unnecessary re-renders\n\n### 3. Architecture Review\nReference `.kiro/steering/reviewers/architecture-reviewer.md` and validate:\n- SOLID principles\n- Component boundaries\n- Dependency direction\n- Layer structure\n\n### 4. Code Quality Review\nReference `.kiro/steering/reviewers/code-quality-reviewer.md` and validate:\n- Function length\n- Complexity\n- Readability\n- YAGNI principle\n\n## Output Format\n\n```markdown\n# Task [Number] Multi-Review Results\n\n## üîí Security Review\n‚úÖ **Passed** - No security issues\n\nOR\n\n‚ö†Ô∏è **Issues Found** (2)\n1. **Critical**: API key hardcoded\n   - Location: src/server/config.ts:15\n   - Fix: Move to environment variable\n   \n2. **High**: Rate limiting missing\n   - Location: src/server/routes/api.ts\n   - Fix: Add express-rate-limit\n\n## ‚ö° Performance Review\n‚úÖ **Passed** - No performance issues\n\n## üèóÔ∏è Architecture Review\n‚ö†Ô∏è **Issues Found** (1)\n1. **High**: Layer violation\n   - Location: src/components/UserList.tsx:45\n   - Problem: Component directly accessing DB\n   - Fix: Access through API layer\n\n## üìù Code Quality Review\n‚úÖ **Passed** - Code quality is good\n\n---\n\n## üìà Overall Assessment\n- **Critical Issues**: 1 ‚Üí Requires immediate fix\n- **High Issues**: 2 ‚Üí Requires quick fix\n- **Medium Issues**: 0\n\n**Recommendation**: Fix critical issues before proceeding to next task.\n```\n\n## Auto-Fix Suggestions\n\nFor critical issues, provide automatic fix suggestions with before/after code examples.\n\n## Task Completion Criteria\n\nA task is only complete when:\n- [ ] Feature implementation complete\n- [ ] Tests written and passing\n- [ ] Multi-review passed\n- [ ] Critical/High issues fixed\n\n## Priority Levels\n- **Critical**: Fix immediately (deployment blocker)\n- **High**: Fix quickly (before next task)\n- **Medium**: Plan fix (add to backlog)\n\n## Compounding Effect\n\nAll discovered issues are automatically added to checklists to prevent them in future tasks."
  }
}
